
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/groundInit.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '88f4dRXWHdA2boc1EUQJNQp', 'groundInit');
// script/groundInit.js

"use strict";

cc.Class({
  "extends": cc.Component,
  properties: {
    hit_audio: {
      //击打时的音效
      type: cc.AudioClip,
      "default": null
    },
    bg_audio: {
      //背景音乐
      type: cc.AudioClip,
      "default": null
    },
    ready_play: {
      //游戏加载中的进度条
      type: cc.Node,
      "default": null
    },
    ready_progress: {
      //游戏加载中的当前进度label
      type: cc.Label,
      "default": null
    },
    flameParticle: {
      //火焰粒子，用在村庄门口的开门关门效果
      type: cc.ParticleSystem,
      "default": null
    },
    hero_pre: {
      type: cc.Prefab,
      "default": null
    },
    guai1_pre: {
      type: cc.Prefab,
      "default": null
    },
    topNode: {
      type: cc.Node,
      "default": null
    },
    mycamrea: {
      type: cc.Node,
      "default": null
    },
    hero: {
      type: cc.Node,
      "default": null
    }
  },
  onLoad: function onLoad() {
    var p = cc.director.getPhysicsManager();
    p.enabled = true;
    p.gravity = cc.v2(0, 0); // p.debugDrawFlags = true;  //显示出来碰撞边框，为了方便演示

    cc.director.getCollisionManager().enabled = true; //检测碰撞
    // cc.director.getCollisionManager().enabledDebugDraw = true;//碰撞检测的边框显示

    this.ready_play.active = true;
    this.ready_progress.active = true;
    this.ready_play.getComponent(cc.ProgressBar).progress = 0;
    this.ready_progress.string = "地图正在初始化。。。";
    this.groundJs = this.node.getComponent("ground2");

    var _this = this;

    _this.groundJs.Init = function () {
      // _this.groundJs.mapCameraNode = this.mycamrea;
      _this.hero.parent = _this.groundJs.getLayerNodeFun("map"); // console.log(_this.groundJs.getLayerNodeFun("map").Rect1);
    };

    _this.groundJs.onLoadSpriteParent = function (n, LayerName, bo) {//onLoadSpriteParent(父节点：Node，图层名：String，是否第一次加载：bool)
    };

    _this.groundJs.onLoadYMovieClip = function (ymc, layerName, bo) {
      //加载动画
      if (ymc.name == "hk1") {
        ymc.on("sound", function (event) {
          cc.audioEngine.play(_this.hit_audio, false, 0.3);
        });
      }
    };

    this.groundJs.onLoadSprite = function (node, name) {
      //加载图块时调用  onLoadSprite(图块：Node，图层名：String)
      if (name == "map") {
        var tag0 = node.getComponent(cc.PolygonCollider);

        if (tag0 != null && tag0.tag == 0 && node.getComponent(cc.RigidBody) == null && node.getComponent(cc.PhysicsPolygonCollider) == null) {
          var body = node.addComponent(cc.RigidBody);
          body.type = cc.RigidBodyType.Static;
          var ps = tag0.points;
          var collider = node.addComponent(cc.PhysicsPolygonCollider);

          for (var i = 0; i < ps.length; i++) {
            if (i > 3) {
              collider.points.push({
                x: ps[i].x,
                y: ps[i].y
              });
            } else {
              collider.points[i].x = ps[i].x;
              collider.points[i].y = ps[i].y;
            }
          }

          collider.apply();
        }
      } // if(name == "ground"){
      //     let guai = node.g101;
      //     if(guai){
      //         console.log(guai)
      //     }
      // let guaiNode = cc.instantiate(this.guai1_pre);
      // guaiNode.parent = _this.groundJs.getLayerNodeFun("map");
      // guaiNode.setPosition(guai);
      // }

    };

    this.groundJs.killSprite = function (node, name) {
      //每次图块从舞台上清除时调用    killSprite(图块：Node，图层名：String)
      if (name == "map") {
        var tag0 = node.getComponent(cc.PolygonCollider);

        if (tag0 != null && tag0.tag == 0) {
          var body = node.getComponent(cc.RigidBody);

          if (body != null) {
            body.destroy();
          }

          var pp = node.getComponent(cc.PhysicsPolygonCollider);

          if (pp != null) {
            pp.destroy();
          }
        }
      }
    };

    this.groundJs.killSpriteParent = function (n, LayerName) {// 每次图块父节点从舞台上清除时调用。  killSpriteParent(父图块：Node，图层名：String)
    };

    this.groundJs.Loading = function (Loaded, Total) {
      //Loading(已加载的贴图数：Number，总贴图数：Number)
      var progress = Loaded / Total;

      if (_this.ready_play != null) {
        _this.ready_progressNum = progress;
      }

      if (_this.ready_progress != null) {
        _this.ready_progress.string = "地图正在创建：" + progress * 100 + "%";
      }
    };
  },
  start: function start() {},
  huaiwu1Init: function huaiwu1Init() {
    var guai1 = this.groundJs.getLayerNodeFun("map").g101;
    this.initG1(guai1);
    var guai2 = this.groundJs.getLayerNodeFun("map").g102;
    this.initG1(guai2);
    var guai3 = this.groundJs.getLayerNodeFun("map").g103;
    this.initG1(guai3);
    var guai4 = this.groundJs.getLayerNodeFun("map").g104;
    this.initG1(guai4);
    var guai5 = this.groundJs.getLayerNodeFun("map").g105;
    this.initG1(guai5);
    var guai6 = this.groundJs.getLayerNodeFun("map").g106;
    this.initG1(guai6);
    var guai7 = this.groundJs.getLayerNodeFun("map").g107;
    this.initG1(guai7);
    var guai8 = this.groundJs.getLayerNodeFun("map").g108;
    this.initG1(guai8);
    var guai9 = this.groundJs.getLayerNodeFun("map").g109;
    this.initG1(guai9);
  },
  initG1: function initG1(guai) {
    //初始化史莱姆
    var guaiNode = cc.instantiate(this.guai1_pre);
    guaiNode.parent = this.groundJs.getLayerNodeFun("map");
    guaiNode.setPosition(guai);
  },
  onEnable: function onEnable() {//active,enable从false变成true
  },
  onDisable: function onDisable() {//active,enable从true变成false
  },
  generate: function generate() {
    //加载英雄预制体进入地图
    var heroNode = cc.instantiate(this.hero_pre);
    var heroNodeJs = heroNode.getComponent("hero_go");
    heroNode.parent = this.groundJs.getLayerNodeFun("map");
    heroNodeJs.mycamrea = this.mycamrea;
    heroNodeJs.groundJsNode = this.node;
    heroNodeJs.map = "ground2";
    this.initHero = true;
    this.topPosheight = this.topNode.getPosition().y - heroGo.node.getPosition().y; //界面顶部的top信息，等级，经验，头像等
  },
  closeDoor: function closeDoor(point1, point2) {//关门时的点起火焰粒子
  },
  onDestroy: function onDestroy() {
    cc.audioEngine.stopAllEffects();
  },
  update: function update(dt) {
    if (this.ready_play != null) {
      var progress = this.ready_play.getComponent(cc.ProgressBar).progress;

      if (progress <= this.ready_progressNum) {
        progress = progress + 0.01;
        this.ready_play.getComponent(cc.ProgressBar).progress = progress;

        if (this.ready_play.getComponent(cc.ProgressBar).progress >= 1 && this.ready_play.getComponent(cc.ProgressBar).progress <= 1.02) {
          this.ready_play.destroy();
          this.ready_play = null;
          cc.audioEngine.play(this.bg_audio, true, 0.3);
          this.generate();
          this.huaiwu1Init();
        }
      }
    }

    if (this.initHero) {
      var viewX = heroGo.node.x;
      var viewY = heroGo.node.y;

      if (viewX <= -1850) {
        viewX = -1850;
      }

      if (viewX >= 2077) {
        viewX = 2077;
      }

      if (viewY >= 1130) {
        viewY = 1130;
      }

      if (viewY <= -3160) {
        viewY = -3160;
      }

      this.mycamrea.x = viewX;
      this.mycamrea.y = viewY;
      var pp = new cc.v2(viewX, viewY + this.topPosheight);
      this.topNode.setPosition(pp);
    }
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0XFxncm91bmRJbml0LmpzIl0sIm5hbWVzIjpbImNjIiwiQ2xhc3MiLCJDb21wb25lbnQiLCJwcm9wZXJ0aWVzIiwiaGl0X2F1ZGlvIiwidHlwZSIsIkF1ZGlvQ2xpcCIsImJnX2F1ZGlvIiwicmVhZHlfcGxheSIsIk5vZGUiLCJyZWFkeV9wcm9ncmVzcyIsIkxhYmVsIiwiZmxhbWVQYXJ0aWNsZSIsIlBhcnRpY2xlU3lzdGVtIiwiaGVyb19wcmUiLCJQcmVmYWIiLCJndWFpMV9wcmUiLCJ0b3BOb2RlIiwibXljYW1yZWEiLCJoZXJvIiwib25Mb2FkIiwicCIsImRpcmVjdG9yIiwiZ2V0UGh5c2ljc01hbmFnZXIiLCJlbmFibGVkIiwiZ3Jhdml0eSIsInYyIiwiZ2V0Q29sbGlzaW9uTWFuYWdlciIsImFjdGl2ZSIsImdldENvbXBvbmVudCIsIlByb2dyZXNzQmFyIiwicHJvZ3Jlc3MiLCJzdHJpbmciLCJncm91bmRKcyIsIm5vZGUiLCJfdGhpcyIsIkluaXQiLCJwYXJlbnQiLCJnZXRMYXllck5vZGVGdW4iLCJvbkxvYWRTcHJpdGVQYXJlbnQiLCJuIiwiTGF5ZXJOYW1lIiwiYm8iLCJvbkxvYWRZTW92aWVDbGlwIiwieW1jIiwibGF5ZXJOYW1lIiwibmFtZSIsIm9uIiwiZXZlbnQiLCJhdWRpb0VuZ2luZSIsInBsYXkiLCJvbkxvYWRTcHJpdGUiLCJ0YWcwIiwiUG9seWdvbkNvbGxpZGVyIiwidGFnIiwiUmlnaWRCb2R5IiwiUGh5c2ljc1BvbHlnb25Db2xsaWRlciIsImJvZHkiLCJhZGRDb21wb25lbnQiLCJSaWdpZEJvZHlUeXBlIiwiU3RhdGljIiwicHMiLCJwb2ludHMiLCJjb2xsaWRlciIsImkiLCJsZW5ndGgiLCJwdXNoIiwieCIsInkiLCJhcHBseSIsImtpbGxTcHJpdGUiLCJkZXN0cm95IiwicHAiLCJraWxsU3ByaXRlUGFyZW50IiwiTG9hZGluZyIsIkxvYWRlZCIsIlRvdGFsIiwicmVhZHlfcHJvZ3Jlc3NOdW0iLCJzdGFydCIsImh1YWl3dTFJbml0IiwiZ3VhaTEiLCJnMTAxIiwiaW5pdEcxIiwiZ3VhaTIiLCJnMTAyIiwiZ3VhaTMiLCJnMTAzIiwiZ3VhaTQiLCJnMTA0IiwiZ3VhaTUiLCJnMTA1IiwiZ3VhaTYiLCJnMTA2IiwiZ3VhaTciLCJnMTA3IiwiZ3VhaTgiLCJnMTA4IiwiZ3VhaTkiLCJnMTA5IiwiZ3VhaSIsImd1YWlOb2RlIiwiaW5zdGFudGlhdGUiLCJzZXRQb3NpdGlvbiIsIm9uRW5hYmxlIiwib25EaXNhYmxlIiwiZ2VuZXJhdGUiLCJoZXJvTm9kZSIsImhlcm9Ob2RlSnMiLCJncm91bmRKc05vZGUiLCJtYXAiLCJpbml0SGVybyIsInRvcFBvc2hlaWdodCIsImdldFBvc2l0aW9uIiwiaGVyb0dvIiwiY2xvc2VEb29yIiwicG9pbnQxIiwicG9pbnQyIiwib25EZXN0cm95Iiwic3RvcEFsbEVmZmVjdHMiLCJ1cGRhdGUiLCJkdCIsInZpZXdYIiwidmlld1kiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUFBLEVBQUUsQ0FBQ0MsS0FBSCxDQUFTO0FBQ0wsYUFBU0QsRUFBRSxDQUFDRSxTQURQO0FBR0xDLEVBQUFBLFVBQVUsRUFBRTtBQUNSQyxJQUFBQSxTQUFTLEVBQUU7QUFBSztBQUNaQyxNQUFBQSxJQUFJLEVBQUVMLEVBQUUsQ0FBQ00sU0FERjtBQUVQLGlCQUFTO0FBRkYsS0FESDtBQUtSQyxJQUFBQSxRQUFRLEVBQUU7QUFBSztBQUNYRixNQUFBQSxJQUFJLEVBQUVMLEVBQUUsQ0FBQ00sU0FESDtBQUVOLGlCQUFTO0FBRkgsS0FMRjtBQVNSRSxJQUFBQSxVQUFVLEVBQUU7QUFBSTtBQUNaSCxNQUFBQSxJQUFJLEVBQUVMLEVBQUUsQ0FBQ1MsSUFERDtBQUVSLGlCQUFTO0FBRkQsS0FUSjtBQWFSQyxJQUFBQSxjQUFjLEVBQUU7QUFBSTtBQUNoQkwsTUFBQUEsSUFBSSxFQUFFTCxFQUFFLENBQUNXLEtBREc7QUFFWixpQkFBUztBQUZHLEtBYlI7QUFpQlJDLElBQUFBLGFBQWEs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VCIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiY2MuQ2xhc3Moe1xyXG4gICAgZXh0ZW5kczogY2MuQ29tcG9uZW50LFxyXG5cclxuICAgIHByb3BlcnRpZXM6IHtcclxuICAgICAgICBoaXRfYXVkaW86IHsgICAgLy/lh7vmiZPml7bnmoTpn7PmlYhcclxuICAgICAgICAgICAgdHlwZTogY2MuQXVkaW9DbGlwLFxyXG4gICAgICAgICAgICBkZWZhdWx0OiBudWxsXHJcbiAgICAgICAgfSxcclxuICAgICAgICBiZ19hdWRpbzogeyAgICAvL+iDjOaZr+mfs+S5kFxyXG4gICAgICAgICAgICB0eXBlOiBjYy5BdWRpb0NsaXAsXHJcbiAgICAgICAgICAgIGRlZmF1bHQ6IG51bGxcclxuICAgICAgICB9LFxyXG4gICAgICAgIHJlYWR5X3BsYXk6IHsgICAvL+a4uOaIj+WKoOi9veS4reeahOi/m+W6puadoVxyXG4gICAgICAgICAgICB0eXBlOiBjYy5Ob2RlLFxyXG4gICAgICAgICAgICBkZWZhdWx0OiBudWxsXHJcbiAgICAgICAgfSxcclxuICAgICAgICByZWFkeV9wcm9ncmVzczogeyAgIC8v5ri45oiP5Yqg6L295Lit55qE5b2T5YmN6L+b5bqmbGFiZWxcclxuICAgICAgICAgICAgdHlwZTogY2MuTGFiZWwsXHJcbiAgICAgICAgICAgIGRlZmF1bHQ6IG51bGxcclxuICAgICAgICB9LFxyXG4gICAgICAgIGZsYW1lUGFydGljbGU6IHsgICAvL+eBq+eEsOeykuWtkO+8jOeUqOWcqOadkeW6hOmXqOWPo+eahOW8gOmXqOWFs+mXqOaViOaenFxyXG4gICAgICAgICAgICB0eXBlOiBjYy5QYXJ0aWNsZVN5c3RlbSxcclxuICAgICAgICAgICAgZGVmYXVsdDogbnVsbFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgaGVyb19wcmU6IHtcclxuICAgICAgICAgICAgdHlwZTogY2MuUHJlZmFiLFxyXG4gICAgICAgICAgICBkZWZhdWx0OiBudWxsXHJcbiAgICAgICAgfSxcclxuICAgICAgICBndWFpMV9wcmU6e1xyXG4gICAgICAgICAgICB0eXBlOmNjLlByZWZhYixcclxuICAgICAgICAgICAgZGVmYXVsdDpudWxsXHJcbiAgICAgICAgfSxcclxuICAgICAgICB0b3BOb2RlOntcclxuICAgICAgICAgIHR5cGU6Y2MuTm9kZSxcclxuICAgICAgICAgIGRlZmF1bHQ6bnVsbFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgbXljYW1yZWE6IHtcclxuICAgICAgICAgICAgdHlwZTogY2MuTm9kZSxcclxuICAgICAgICAgICAgZGVmYXVsdDogbnVsbCxcclxuICAgICAgICB9LFxyXG4gICAgICAgIGhlcm86IHtcclxuICAgICAgICAgICAgdHlwZTogY2MuTm9kZSxcclxuICAgICAgICAgICAgZGVmYXVsdDogbnVsbFxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcblxyXG4gICAgb25Mb2FkKCkge1xyXG4gICAgICAgIGxldCBwID0gY2MuZGlyZWN0b3IuZ2V0UGh5c2ljc01hbmFnZXIoKTtcclxuICAgICAgICBwLmVuYWJsZWQgPSB0cnVlO1xyXG4gICAgICAgIHAuZ3Jhdml0eSA9IGNjLnYyKDAsIDApO1xyXG4gICAgICAgIC8vIHAuZGVidWdEcmF3RmxhZ3MgPSB0cnVlOyAgLy/mmL7npLrlh7rmnaXnorDmkp7ovrnmoYbvvIzkuLrkuobmlrnkvr/mvJTnpLpcclxuICAgICAgICBjYy5kaXJlY3Rvci5nZXRDb2xsaXNpb25NYW5hZ2VyKCkuZW5hYmxlZCA9IHRydWU7IC8v5qOA5rWL56Kw5pKeXHJcbiAgICAgICAgLy8gY2MuZGlyZWN0b3IuZ2V0Q29sbGlzaW9uTWFuYWdlcigpLmVuYWJsZWREZWJ1Z0RyYXcgPSB0cnVlOy8v56Kw5pKe5qOA5rWL55qE6L655qGG5pi+56S6XHJcblxyXG4gICAgICAgIHRoaXMucmVhZHlfcGxheS5hY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMucmVhZHlfcHJvZ3Jlc3MuYWN0aXZlID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLnJlYWR5X3BsYXkuZ2V0Q29tcG9uZW50KGNjLlByb2dyZXNzQmFyKS5wcm9ncmVzcyA9IDA7XHJcbiAgICAgICAgdGhpcy5yZWFkeV9wcm9ncmVzcy5zdHJpbmcgPSBcIuWcsOWbvuato+WcqOWIneWni+WMluOAguOAguOAglwiO1xyXG5cclxuICAgICAgICB0aGlzLmdyb3VuZEpzID0gdGhpcy5ub2RlLmdldENvbXBvbmVudChcImdyb3VuZDJcIik7XHJcbiAgICAgICAgbGV0IF90aGlzID0gdGhpcztcclxuICAgICAgICBfdGhpcy5ncm91bmRKcy5Jbml0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAvLyBfdGhpcy5ncm91bmRKcy5tYXBDYW1lcmFOb2RlID0gdGhpcy5teWNhbXJlYTtcclxuICAgICAgICAgICAgX3RoaXMuaGVyby5wYXJlbnQgPSBfdGhpcy5ncm91bmRKcy5nZXRMYXllck5vZGVGdW4oXCJtYXBcIik7XHJcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKF90aGlzLmdyb3VuZEpzLmdldExheWVyTm9kZUZ1bihcIm1hcFwiKS5SZWN0MSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIF90aGlzLmdyb3VuZEpzLm9uTG9hZFNwcml0ZVBhcmVudCA9IGZ1bmN0aW9uIChuLCBMYXllck5hbWUsIGJvKSB7Ly9vbkxvYWRTcHJpdGVQYXJlbnQo54i26IqC54K577yaTm9kZe+8jOWbvuWxguWQje+8mlN0cmluZ++8jOaYr+WQpuesrOS4gOasoeWKoOi9ve+8mmJvb2wpXHJcblxyXG4gICAgICAgIH1cclxuICAgICAgICBfdGhpcy5ncm91bmRKcy5vbkxvYWRZTW92aWVDbGlwID0gZnVuY3Rpb24gKHltYywgbGF5ZXJOYW1lLCBibykgey8v5Yqg6L295Yqo55S7XHJcbiAgICAgICAgICAgIGlmICh5bWMubmFtZSA9PSBcImhrMVwiKSB7XHJcbiAgICAgICAgICAgICAgICB5bWMub24oXCJzb3VuZFwiLCBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICAgICAgICAgICAgICBjYy5hdWRpb0VuZ2luZS5wbGF5KF90aGlzLmhpdF9hdWRpbywgZmFsc2UsIDAuMyk7XHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuZ3JvdW5kSnMub25Mb2FkU3ByaXRlID0gZnVuY3Rpb24gKG5vZGUsIG5hbWUpIHsgLy/liqDovb3lm77lnZfml7bosIPnlKggIG9uTG9hZFNwcml0ZSjlm77lnZfvvJpOb2Rl77yM5Zu+5bGC5ZCN77yaU3RyaW5nKVxyXG4gICAgICAgICAgICBpZiAobmFtZSA9PSBcIm1hcFwiKSB7XHJcbiAgICAgICAgICAgICAgICBsZXQgdGFnMCA9IG5vZGUuZ2V0Q29tcG9uZW50KGNjLlBvbHlnb25Db2xsaWRlcik7XHJcbiAgICAgICAgICAgICAgICBpZiAodGFnMCAhPSBudWxsICYmIHRhZzAudGFnID09IDAgJiYgbm9kZS5nZXRDb21wb25lbnQoY2MuUmlnaWRCb2R5KSA9PSBudWxsICYmIG5vZGUuZ2V0Q29tcG9uZW50KGNjLlBoeXNpY3NQb2x5Z29uQ29sbGlkZXIpID09IG51bGwpIHtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgYm9keSA9IG5vZGUuYWRkQ29tcG9uZW50KGNjLlJpZ2lkQm9keSk7XHJcbiAgICAgICAgICAgICAgICAgICAgYm9keS50eXBlID0gY2MuUmlnaWRCb2R5VHlwZS5TdGF0aWM7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IHBzID0gdGFnMC5wb2ludHM7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IGNvbGxpZGVyID0gbm9kZS5hZGRDb21wb25lbnQoY2MuUGh5c2ljc1BvbHlnb25Db2xsaWRlcik7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwcy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoaSA+IDMpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbGxpZGVyLnBvaW50cy5wdXNoKHt4OiBwc1tpXS54LCB5OiBwc1tpXS55fSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xsaWRlci5wb2ludHNbaV0ueCA9IHBzW2ldLng7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xsaWRlci5wb2ludHNbaV0ueSA9IHBzW2ldLnk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgY29sbGlkZXIuYXBwbHkoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvLyBpZihuYW1lID09IFwiZ3JvdW5kXCIpe1xyXG4gICAgICAgICAgICAvLyAgICAgbGV0IGd1YWkgPSBub2RlLmcxMDE7XHJcbiAgICAgICAgICAgIC8vICAgICBpZihndWFpKXtcclxuICAgICAgICAgICAgLy8gICAgICAgICBjb25zb2xlLmxvZyhndWFpKVxyXG4gICAgICAgICAgICAvLyAgICAgfVxyXG4gICAgICAgICAgICAgICAgLy8gbGV0IGd1YWlOb2RlID0gY2MuaW5zdGFudGlhdGUodGhpcy5ndWFpMV9wcmUpO1xyXG4gICAgICAgICAgICAgICAgLy8gZ3VhaU5vZGUucGFyZW50ID0gX3RoaXMuZ3JvdW5kSnMuZ2V0TGF5ZXJOb2RlRnVuKFwibWFwXCIpO1xyXG4gICAgICAgICAgICAgICAgLy8gZ3VhaU5vZGUuc2V0UG9zaXRpb24oZ3VhaSk7XHJcbiAgICAgICAgICAgIC8vIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5ncm91bmRKcy5raWxsU3ByaXRlID0gZnVuY3Rpb24gKG5vZGUsIG5hbWUpIHsvL+avj+asoeWbvuWdl+S7juiInuWPsOS4iua4hemZpOaXtuiwg+eUqCAgICBraWxsU3ByaXRlKOWbvuWdl++8mk5vZGXvvIzlm77lsYLlkI3vvJpTdHJpbmcpXHJcbiAgICAgICAgICAgIGlmIChuYW1lID09IFwibWFwXCIpIHtcclxuICAgICAgICAgICAgICAgIGxldCB0YWcwID0gbm9kZS5nZXRDb21wb25lbnQoY2MuUG9seWdvbkNvbGxpZGVyKTtcclxuICAgICAgICAgICAgICAgIGlmICh0YWcwICE9IG51bGwgJiYgdGFnMC50YWcgPT0gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBib2R5ID0gbm9kZS5nZXRDb21wb25lbnQoY2MuUmlnaWRCb2R5KTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoYm9keSAhPSBudWxsKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvZHkuZGVzdHJveSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBsZXQgcHAgPSBub2RlLmdldENvbXBvbmVudChjYy5QaHlzaWNzUG9seWdvbkNvbGxpZGVyKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAocHAgIT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwcC5kZXN0cm95KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuZ3JvdW5kSnMua2lsbFNwcml0ZVBhcmVudCA9IGZ1bmN0aW9uIChuLCBMYXllck5hbWUpIHsvLyDmr4/mrKHlm77lnZfniLboioLngrnku47oiJ7lj7DkuIrmuIXpmaTml7bosIPnlKjjgIIgIGtpbGxTcHJpdGVQYXJlbnQo54i25Zu+5Z2X77yaTm9kZe+8jOWbvuWxguWQje+8mlN0cmluZylcclxuXHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuZ3JvdW5kSnMuTG9hZGluZyA9IGZ1bmN0aW9uIChMb2FkZWQsIFRvdGFsKSB7ICAgLy9Mb2FkaW5nKOW3suWKoOi9veeahOi0tOWbvuaVsO+8mk51bWJlcu+8jOaAu+i0tOWbvuaVsO+8mk51bWJlcilcclxuICAgICAgICAgICAgbGV0IHByb2dyZXNzID0gTG9hZGVkIC8gVG90YWw7XHJcbiAgICAgICAgICAgIGlmIChfdGhpcy5yZWFkeV9wbGF5ICE9IG51bGwpIHtcclxuICAgICAgICAgICAgICAgIF90aGlzLnJlYWR5X3Byb2dyZXNzTnVtID0gcHJvZ3Jlc3M7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKF90aGlzLnJlYWR5X3Byb2dyZXNzICE9IG51bGwpIHtcclxuICAgICAgICAgICAgICAgIF90aGlzLnJlYWR5X3Byb2dyZXNzLnN0cmluZyA9IFwi5Zyw5Zu+5q2j5Zyo5Yib5bu677yaXCIgKyBwcm9ncmVzcyAqIDEwMCArIFwiJVwiO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgIH0sXHJcblxyXG4gICAgc3RhcnQgKCkge1xyXG4gICAgICAgIFxyXG4gICAgfSxcclxuICAgIGh1YWl3dTFJbml0KCl7XHJcbiAgICAgICAgICAgIGxldCBndWFpMSA9IHRoaXMuZ3JvdW5kSnMuZ2V0TGF5ZXJOb2RlRnVuKFwibWFwXCIpLmcxMDE7XHJcbiAgICAgICAgICAgIHRoaXMuaW5pdEcxKGd1YWkxKTtcclxuICAgICAgICBsZXQgZ3VhaTIgPSB0aGlzLmdyb3VuZEpzLmdldExheWVyTm9kZUZ1bihcIm1hcFwiKS5nMTAyO1xyXG4gICAgICAgIHRoaXMuaW5pdEcxKGd1YWkyKTtcclxuICAgICAgICBsZXQgZ3VhaTMgPSB0aGlzLmdyb3VuZEpzLmdldExheWVyTm9kZUZ1bihcIm1hcFwiKS5nMTAzO1xyXG4gICAgICAgIHRoaXMuaW5pdEcxKGd1YWkzKTtcclxuICAgICAgICBsZXQgZ3VhaTQgPSB0aGlzLmdyb3VuZEpzLmdldExheWVyTm9kZUZ1bihcIm1hcFwiKS5nMTA0O1xyXG4gICAgICAgIHRoaXMuaW5pdEcxKGd1YWk0KTtcclxuICAgICAgICBsZXQgZ3VhaTUgPSB0aGlzLmdyb3VuZEpzLmdldExheWVyTm9kZUZ1bihcIm1hcFwiKS5nMTA1O1xyXG4gICAgICAgIHRoaXMuaW5pdEcxKGd1YWk1KTtcclxuICAgICAgICBsZXQgZ3VhaTYgPSB0aGlzLmdyb3VuZEpzLmdldExheWVyTm9kZUZ1bihcIm1hcFwiKS5nMTA2O1xyXG4gICAgICAgIHRoaXMuaW5pdEcxKGd1YWk2KTtcclxuICAgICAgICBsZXQgZ3VhaTcgPSB0aGlzLmdyb3VuZEpzLmdldExheWVyTm9kZUZ1bihcIm1hcFwiKS5nMTA3O1xyXG4gICAgICAgIHRoaXMuaW5pdEcxKGd1YWk3KTtcclxuICAgICAgICBsZXQgZ3VhaTggPSB0aGlzLmdyb3VuZEpzLmdldExheWVyTm9kZUZ1bihcIm1hcFwiKS5nMTA4O1xyXG4gICAgICAgIHRoaXMuaW5pdEcxKGd1YWk4KTtcclxuICAgICAgICBsZXQgZ3VhaTkgPSB0aGlzLmdyb3VuZEpzLmdldExheWVyTm9kZUZ1bihcIm1hcFwiKS5nMTA5O1xyXG4gICAgICAgIHRoaXMuaW5pdEcxKGd1YWk5KTtcclxuICAgIH0sXHJcbiAgICBpbml0RzEoZ3VhaSl7Ly/liJ3lp4vljJblj7LojrHlp4ZcclxuICAgICAgICBsZXQgZ3VhaU5vZGUgPSBjYy5pbnN0YW50aWF0ZSh0aGlzLmd1YWkxX3ByZSk7XHJcbiAgICAgICAgZ3VhaU5vZGUucGFyZW50ID0gdGhpcy5ncm91bmRKcy5nZXRMYXllck5vZGVGdW4oXCJtYXBcIik7XHJcbiAgICAgICAgZ3VhaU5vZGUuc2V0UG9zaXRpb24oZ3VhaSk7XHJcbiAgICB9LFxyXG5cclxuICAgIG9uRW5hYmxlKCl7Ly9hY3RpdmUsZW5hYmxl5LuOZmFsc2Xlj5jmiJB0cnVlXHJcblxyXG4gICAgfSxcclxuICAgIG9uRGlzYWJsZSgpey8vYWN0aXZlLGVuYWJsZeS7jnRydWXlj5jmiJBmYWxzZVxyXG5cclxuICAgIH0sXHJcblxyXG4gICAgZ2VuZXJhdGUoKXsvL+WKoOi9veiLsembhOmihOWItuS9k+i/m+WFpeWcsOWbvlxyXG4gICAgICAgIGxldCBoZXJvTm9kZSA9IGNjLmluc3RhbnRpYXRlKHRoaXMuaGVyb19wcmUpO1xyXG4gICAgICAgIGxldCBoZXJvTm9kZUpzID0gaGVyb05vZGUuZ2V0Q29tcG9uZW50KFwiaGVyb19nb1wiKTtcclxuICAgICAgICBoZXJvTm9kZS5wYXJlbnQgPSB0aGlzLmdyb3VuZEpzLmdldExheWVyTm9kZUZ1bihcIm1hcFwiKTtcclxuICAgICAgICBoZXJvTm9kZUpzLm15Y2FtcmVhID0gdGhpcy5teWNhbXJlYTtcclxuICAgICAgICBoZXJvTm9kZUpzLmdyb3VuZEpzTm9kZSA9IHRoaXMubm9kZTtcclxuICAgICAgICBoZXJvTm9kZUpzLm1hcCA9IFwiZ3JvdW5kMlwiO1xyXG4gICAgICAgIHRoaXMuaW5pdEhlcm8gPSB0cnVlO1xyXG4gICAgICAgIHRoaXMudG9wUG9zaGVpZ2h0ID0gdGhpcy50b3BOb2RlLmdldFBvc2l0aW9uKCkueSAtIGhlcm9Hby5ub2RlLmdldFBvc2l0aW9uKCkueTsvL+eVjOmdoumhtumDqOeahHRvcOS/oeaBr++8jOetiee6p++8jOe7j+mqjO+8jOWktOWDj+etiVxyXG4gICAgfSxcclxuXHJcbiAgICBjbG9zZURvb3IocG9pbnQxLHBvaW50Mil7ICAgLy/lhbPpl6jml7bnmoTngrnotbfngavnhLDnspLlrZBcclxuXHJcbiAgICB9LFxyXG4gICAgb25EZXN0cm95KCl7XHJcbiAgICAgICAgY2MuYXVkaW9FbmdpbmUuc3RvcEFsbEVmZmVjdHMoKVxyXG4gICAgfSxcclxuXHJcbiAgICB1cGRhdGUgKGR0KSB7XHJcbiAgICAgICAgaWYodGhpcy5yZWFkeV9wbGF5ICE9IG51bGwpe1xyXG4gICAgICAgICAgICBsZXQgcHJvZ3Jlc3MgPSB0aGlzLnJlYWR5X3BsYXkuZ2V0Q29tcG9uZW50KGNjLlByb2dyZXNzQmFyKS5wcm9ncmVzcztcclxuICAgICAgICAgICAgaWYocHJvZ3Jlc3MgPD0gdGhpcy5yZWFkeV9wcm9ncmVzc051bSl7XHJcbiAgICAgICAgICAgICAgICBwcm9ncmVzcyA9IHByb2dyZXNzKzAuMDE7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnJlYWR5X3BsYXkuZ2V0Q29tcG9uZW50KGNjLlByb2dyZXNzQmFyKS5wcm9ncmVzcyA9IHByb2dyZXNzO1xyXG4gICAgICAgICAgICAgICAgaWYodGhpcy5yZWFkeV9wbGF5LmdldENvbXBvbmVudChjYy5Qcm9ncmVzc0JhcikucHJvZ3Jlc3MgPj0gMSAmJiB0aGlzLnJlYWR5X3BsYXkuZ2V0Q29tcG9uZW50KGNjLlByb2dyZXNzQmFyKS5wcm9ncmVzcyA8PSAxLjAyKXtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnJlYWR5X3BsYXkuZGVzdHJveSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMucmVhZHlfcGxheSA9IG51bGw7XHJcbiAgICAgICAgICAgICAgICAgICAgY2MuYXVkaW9FbmdpbmUucGxheSh0aGlzLmJnX2F1ZGlvLHRydWUsMC4zKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmdlbmVyYXRlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5odWFpd3UxSW5pdCgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKHRoaXMuaW5pdEhlcm8pe1xyXG4gICAgICAgICAgICBsZXQgdmlld1ggPSBoZXJvR28ubm9kZS54O1xyXG4gICAgICAgICAgICBsZXQgdmlld1kgPSBoZXJvR28ubm9kZS55O1xyXG4gICAgICAgICAgICBpZih2aWV3WCA8PSAtMTg1MCl7XHJcbiAgICAgICAgICAgICAgICB2aWV3WCA9IC0xODUwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmKHZpZXdYID49IDIwNzcpe1xyXG4gICAgICAgICAgICAgICAgdmlld1ggPSAyMDc3O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmKHZpZXdZID49IDExMzApe1xyXG4gICAgICAgICAgICAgICAgdmlld1kgPSAxMTMwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmKHZpZXdZIDw9IC0zMTYwKXtcclxuICAgICAgICAgICAgICAgIHZpZXdZID0gLTMxNjA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy5teWNhbXJlYS54ID0gdmlld1g7XHJcbiAgICAgICAgICAgIHRoaXMubXljYW1yZWEueSA9IHZpZXdZO1xyXG4gICAgICAgICAgICBsZXQgcHAgPSBuZXcgY2MudjIodmlld1gsdmlld1kgK3RoaXMudG9wUG9zaGVpZ2h0KTtcclxuICAgICAgICAgICAgdGhpcy50b3BOb2RlLnNldFBvc2l0aW9uKHBwKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgfSxcclxufSk7XHJcbiJdfQ==