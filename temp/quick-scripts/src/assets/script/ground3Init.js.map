{"version":3,"sources":["assets\\script\\ground3Init.js"],"names":["cc","Class","Component","properties","onLoad","p","director","getPhysicsManager","enabled","gravity","v2","debugDrawFlags","getCollisionManager","groundJs","node","getComponent","_this","Init","mapCameraNode","hero_go","mycamrea","parent","getLayerNodeFun","onLoadSprite","name","tag0","BoxCollider","tag","body","addComponent","RigidBody","type","RigidBodyType","Static","collider","PhysicsBoxCollider","offset","apply","killSprite","PolygonCollider","destroy","start"],"mappings":";;;;;;AACAA,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,SADP;AAGLC,EAAAA,UAAU,EAAE,EAHP;AAOLC,EAAAA,MAPK,oBAOK;AAEN,QAAIC,CAAC,GAAGL,EAAE,CAACM,QAAH,CAAYC,iBAAZ,EAAR;AACAF,IAAAA,CAAC,CAACG,OAAF,GAAY,IAAZ;AACAH,IAAAA,CAAC,CAACI,OAAF,GAAYT,EAAE,CAACU,EAAH,CAAM,CAAN,EAAQ,CAAC,IAAT,CAAZ;AACAL,IAAAA,CAAC,CAACM,cAAF,GAAmB,IAAnB,CALM,CAKoB;;AAC1BX,IAAAA,EAAE,CAACM,QAAH,CAAYM,mBAAZ,GAAkCJ,OAAlC,GAA4C,IAA5C,CANM,CAM4C;AAClD;;AAEA,SAAKK,QAAL,GAAgB,KAAKC,IAAL,CAAUC,YAAV,CAAuB,SAAvB,CAAhB;;AACA,QAAIC,KAAK,GAAG,IAAZ;;AACAA,IAAAA,KAAK,CAACH,QAAN,CAAeI,IAAf,GAAoB,YAAU;AAC1BD,MAAAA,KAAK,CAACH,QAAN,CAAeK,aAAf,GAA+BC,OAAO,CAACC,QAAvC;AACAD,MAAAA,OAAO,CAACL,IAAR,CAAaO,MAAb,GAAsBL,KAAK,CAACH,QAAN,CAAeS,eAAf,CAA+B,KAA/B,CAAtB,CAF0B,CAG1B;AACH,KAJD;;AAKA,SAAKT,QAAL,CAAcU,YAAd,GAA2B,UAAST,IAAT,EAAcU,IAAd,EAAmB;AAAE;AAC5C,UAAGA,IAAI,IAAI,KAAX,EAAiB;AACb,YAAIC,IAAI,GAAGX,IAAI,CAACC,YAAL,CAAkBf,EAAE,CAAC0B,WAArB,CAAX;;AACA,YAAGD,IAAI,IAAI,IAAR,IAAgBA,IAAI,CAACE,GAAL,IAAY,CAA/B,EAAiC;AAC7B,cAAIC,IAAI,GAAGd,IAAI,CAACe,YAAL,CAAkB7B,EAAE,CAAC8B,SAArB,CAAX;AACAF,UAAAA,IAAI,CAACG,IAAL,GAAY/B,EAAE,CAACgC,aAAH,CAAiBC,MAA7B,CAF6B,CAG7B;;AACA,cAAIC,QAAQ,GAAGpB,IAAI,CAACe,YAAL,CAAkB7B,EAAE,CAACmC,kBAArB,CAAf;AACAD,UAAAA,QAAQ,CAACE,MAAT,GAAkBpC,EAAE,CAACU,EAAH,CAAM,CAAN,EAAQ,CAAR,CAAlB,CAL6B,CAM7B;AACA;AACA;AACA;;AACAwB,UAAAA,QAAQ,CAACG,KAAT;AACH;AACJ;AACJ,KAhBD;;AAiBA,SAAKxB,QAAL,CAAcyB,UAAd,GAAyB,UAASxB,IAAT,EAAcU,IAAd,EAAmB;AAAC;AACzC,UAAGA,IAAI,IAAI,KAAX,EAAiB;AACb,YAAIC,IAAI,GAAGX,IAAI,CAACC,YAAL,CAAkBf,EAAE,CAACuC,eAArB,CAAX;;AACA,YAAGd,IAAI,IAAI,IAAR,IAAgBA,IAAI,CAACE,GAAL,IAAY,CAA/B,EAAiC;AAC7B,cAAIC,IAAI,GAAGd,IAAI,CAACC,YAAL,CAAkBf,EAAE,CAAC8B,SAArB,CAAX;AACAF,UAAAA,IAAI,CAACY,OAAL;AACH;AACJ;AACJ,KARD;AASH,GAjDI;AAmDLC,EAAAA,KAnDK,mBAmDI,CAER,CArDI,CAuDL;;AAvDK,CAAT","sourceRoot":"/","sourcesContent":["\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n\r\n    },\r\n\r\n    onLoad () {\r\n\r\n        let p = cc.director.getPhysicsManager();\r\n        p.enabled = true;\r\n        p.gravity = cc.v2(0,-8000);\r\n        p.debugDrawFlags = true;  //显示出来碰撞边框，为了方便演示\r\n        cc.director.getCollisionManager().enabled = true; //检测碰撞\r\n        // cc.director.getCollisionManager().enabledDebugDraw = true;//碰撞检测的边框显示\r\n\r\n        this.groundJs = this.node.getComponent(\"ground3\");\r\n        let _this = this;\r\n        _this.groundJs.Init=function(){\r\n            _this.groundJs.mapCameraNode = hero_go.mycamrea;\r\n            hero_go.node.parent = _this.groundJs.getLayerNodeFun(\"map\");\r\n            // console.log(_this.groundJs.getLayerNodeFun(\"map\").Rect1);\r\n        }\r\n        this.groundJs.onLoadSprite=function(node,name){ //加载图块时调用  onLoadSprite(图块：Node，图层名：String)\r\n            if(name == \"map\"){\r\n                let tag0 = node.getComponent(cc.BoxCollider);\r\n                if(tag0 != null && tag0.tag == 0){\r\n                    let body = node.addComponent(cc.RigidBody);\r\n                    body.type = cc.RigidBodyType.Static;\r\n                    // let ps = tag0.points;\r\n                    let collider = node.addComponent(cc.PhysicsBoxCollider);\r\n                    collider.offset = cc.v2(0,0);\r\n                    // for(let i=0;i<ps.length;i++){\r\n                    //     collider.points[i].x = ps[i].x;\r\n                    //     collider.points[i].y = ps[i].y;\r\n                    // }\r\n                    collider.apply();\r\n                }\r\n            }\r\n        }\r\n        this.groundJs.killSprite=function(node,name){//每次图块从舞台上清除时调用    killSprite(图块：Node，图层名：String)\r\n            if(name == \"map\"){\r\n                let tag0 = node.getComponent(cc.PolygonCollider);\r\n                if(tag0 != null && tag0.tag == 0){\r\n                    let body = node.getComponent(cc.RigidBody);\r\n                    body.destroy();\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}