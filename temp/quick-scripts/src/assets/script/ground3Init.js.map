{"version":3,"sources":["assets\\script\\ground3Init.js"],"names":["cc","Class","Component","properties","hit_audio","type","AudioClip","bg_audio","ready_play","Node","ready_progress","Label","hero_pre","Prefab","mycamrea","onLoad","p","director","getPhysicsManager","enabled","getCollisionManager","active","getComponent","ProgressBar","progress","string","groundJs","node","_this","Init","onLoadSprite","name","tag0","PolygonCollider","tag","body","addComponent","RigidBody","RigidBodyType","Static","ps","points","collider","PhysicsPolygonCollider","i","length","push","x","y","apply","killSprite","destroy","Loading","Loaded","Total","ready_progressNum","generate","heroNode","instantiate","heroNodeJs","parent","getLayerNodeFun","groundJsNode","map","top","getChildByName","start","gravity","v2","update","dt","audioEngine","play"],"mappings":"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","sourceRoot":"/","sourcesContent":["\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        hit_audio:{    //击打时的音效\r\n            type:cc.AudioClip,\r\n            default:null\r\n        },\r\n        bg_audio:{    //背景音乐\r\n            type:cc.AudioClip,\r\n            default:null\r\n        },\r\n        ready_play:{   //游戏加载中的进度条\r\n            type:cc.Node,\r\n            default: null\r\n        },\r\n        ready_progress:{   //游戏加载中的当前进度label\r\n            type:cc.Label,\r\n            default:null\r\n        },\r\n        hero_pre:{\r\n            type:cc.Prefab,\r\n            default:null\r\n        },\r\n        mycamrea:{\r\n            type:cc.Node,\r\n            default:null,\r\n        },\r\n    },\r\n\r\n    onLoad () {\r\n        let p = cc.director.getPhysicsManager();\r\n        p.enabled = true;\r\n        // p.gravity = cc.v2(0,-320);\r\n        // p.debugDrawFlags = true;  //显示出来碰撞边框，为了方便演示\r\n        cc.director.getCollisionManager().enabled = true; //检测碰撞\r\n        // cc.director.getCollisionManager().enabledDebugDraw = true;//碰撞检测的边框显示\r\n\r\n        this.ready_play.active = true;\r\n        this.ready_progress.active = true;\r\n        this.ready_play.getComponent(cc.ProgressBar).progress = 0;\r\n        this.ready_progress.string = \"地图正在初始化。。。\";\r\n\r\n        this.groundJs = this.node.getComponent(\"ground3\");\r\n        let _this = this;\r\n        _this.groundJs.Init=function(){\r\n            // _this.groundJs.mapCameraNode = hero_go.mycamrea;\r\n            // hero_go.node.parent = _this.groundJs.getLayerNodeFun(\"map\");\r\n            // cc.director.getPhysicsManager().gravity = cc.v2(0,-320);\r\n            // console.log(_this.groundJs.getLayerNodeFun(\"map\").Rect1);\r\n        }\r\n        this.groundJs.onLoadSprite=function(node,name){ //加载图块时调用  onLoadSprite(图块：Node，图层名：String)\r\n            if(name == \"map\"){\r\n                let tag0 = node.getComponent(cc.PolygonCollider);\r\n                if(tag0 != null && tag0.tag == 0){\r\n                    let body = node.addComponent(cc.RigidBody);\r\n                    body.type = cc.RigidBodyType.Static;\r\n                    let ps = tag0.points;\r\n                    let collider = node.addComponent(cc.PhysicsPolygonCollider);\r\n                    for(let i=0;i<ps.length;i++){\r\n                        if(i > 3){\r\n                            collider.points.push({x:ps[i].x,y:ps[i].y});\r\n                        }else {\r\n                            collider.points[i].x = ps[i].x;\r\n                            collider.points[i].y = ps[i].y;\r\n                        }\r\n                    }\r\n                    collider.apply();\r\n                }\r\n            }\r\n        }\r\n        this.groundJs.killSprite=function(node,name){//每次图块从舞台上清除时调用    killSprite(图块：Node，图层名：String)\r\n            if(name == \"map\"){\r\n                let tag0 = node.getComponent(cc.PolygonCollider);\r\n                if(tag0 != null && tag0.tag == 0){\r\n                    let body = node.getComponent(cc.RigidBody);\r\n                    if(body == null){\r\n                        return;\r\n                    }\r\n                    body.destroy();\r\n                    node.getComponent(cc.PhysicsPolygonCollider).destroy();\r\n                }\r\n            }\r\n        }\r\n        this.groundJs.Loading=function(Loaded,Total){   //Loading(已加载的贴图数：Number，总贴图数：Number)\r\n            let progress = Loaded/Total;\r\n            if(_this.ready_play != null){\r\n                _this.ready_progressNum = progress;\r\n            }\r\n            if(_this.ready_progress != null){\r\n                _this.ready_progress.string =\"地图正在创建：\"+ progress*100+\"%\";\r\n            }\r\n        }\r\n    },\r\n\r\n    generate(){//加载英雄预制体进入地图\r\n        let heroNode = cc.instantiate(this.hero_pre);\r\n        let heroNodeJs = heroNode.getComponent(\"hero_go\");\r\n        heroNode.parent = this.groundJs.getLayerNodeFun(\"hero\");\r\n        // heroNode.setPosition(cc.v2(0,0));\r\n        heroNodeJs.mycamrea = this.mycamrea;\r\n        heroNodeJs.groundJsNode = this.node;\r\n        heroNodeJs.map = \"ground3\";\r\n        heroNodeJs.top = this.node.parent.getChildByName(\"top\");\r\n    },\r\n\r\n    start () {\r\n        cc.director.getPhysicsManager().gravity = cc.v2(0,-320);\r\n    },\r\n\r\n    update (dt) {\r\n        if(this.ready_play != null){\r\n            let progress = this.ready_play.getComponent(cc.ProgressBar).progress;\r\n            if(progress <= this.ready_progressNum){\r\n                progress = progress+0.01;\r\n                this.ready_play.getComponent(cc.ProgressBar).progress = progress;\r\n                if(this.ready_play.getComponent(cc.ProgressBar).progress >= 1 && this.ready_play.getComponent(cc.ProgressBar).progress <= 1.02){\r\n                    this.ready_play.active = false;\r\n                    this.ready_progress.active = false;\r\n                    // this.node.getChildByName(\"ready_play\").destroy();\r\n                    cc.audioEngine.play(this.bg_audio,true,0.3);\r\n                    this.generate();\r\n                    // this.node.getChildByName(\"hero\").active = true;\r\n                }\r\n            }\r\n        }\r\n    },\r\n});\r\n"]}