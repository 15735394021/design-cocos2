{"version":3,"sources":["assets\\script\\loading.js"],"names":["cc","Class","Component","properties","m_ProMaxLen","type","Integer","m_Speed","m_Progress","slide","min","max","step","notify","_progressChange","m_ProImage","Node","ctor","m_progressIng","width","setProgress","pro","m_SetWidth","onLoad","start","update","dt","finishCallBack"],"mappings":";;;;;;AACAA,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,SADP;AAGLC,EAAAA,UAAU,EAAE;AACRC,IAAAA,WAAW,EAAC;AACR,iBAAQ,GADA;AAERC,MAAAA,IAAI,EAACL,EAAE,CAACM;AAFA,KADJ;AAKRC,IAAAA,OAAO,EAAC;AACJ,iBAAQ,GADJ;AAEJF,MAAAA,IAAI,EAACL,EAAE,CAACM;AAFJ,KALA;AASRE,IAAAA,UAAU,EAAC;AACPH,MAAAA,IAAI,EAACL,EAAE,CAACM,OADD;AAEP,iBAAQ,CAFD;AAGPG,MAAAA,KAAK,EAAC,IAHC;AAIPC,MAAAA,GAAG,EAAC,CAJG;AAKPC,MAAAA,GAAG,EAAC,GALG;AAMPC,MAAAA,IAAI,EAAC,CANE;AAOPC,MAAAA,MAPO,oBAOC;AACJ,aAAKC,eAAL;AACH;AATM,KATH;AAoBRC,IAAAA,UAAU,EAACf,EAAE,CAACgB;AApBN,GAHP;AA0BLC,EAAAA,IAAI,EAAC,gBAAU;AACX,SAAKC,aAAL,GAAqB,KAArB;AACH,GA5BI;AA6BLJ,EAAAA,eAAe,EAAC,2BAAU;AACtB,SAAKC,UAAL,CAAgBI,KAAhB,GAAyB,KAAKX,UAA9B;AACH,GA/BI;AAgCL;AACAY,EAAAA,WAAW,EAAC,qBAASC,GAAT,EAAa;AACrB,QAAKA,GAAG,GAAG,CAAN,IAAWA,GAAG,GAAG,CAAtB,EAAyB;AACrB;AACH;;AACD,QAAIF,KAAK,GAAG,KAAKf,WAAL,GAAmBiB,GAA/B;;AACA,QAAIF,KAAK,GAAG,KAAKG,UAAjB,EAA6B;AACzB;AACH;;AACD,SAAKA,UAAL,GAAkB,KAAKlB,WAAL,GAAmBiB,GAArC;AAEA,SAAKH,aAAL,GAAqB,IAArB;AACH,GA5CI;AA6CL;AAEAK,EAAAA,MA/CK,oBA+CK;AACN,SAAKR,UAAL,CAAgBI,KAAhB,GAAwB,CAAxB;AAEH,GAlDI;AAoDLK,EAAAA,KApDK,mBAoDI,CAER,CAtDI;AAwDLC,EAAAA,MAxDK,kBAwDGC,EAxDH,EAwDO;AACR,QAAK,KAAKR,aAAV,EAAyB;AAErB,UAAI,KAAKH,UAAL,CAAgBI,KAAhB,GAAwB,KAAKG,UAAjC,EAA4C;AACxC,aAAKP,UAAL,CAAgBI,KAAhB,IAAyBO,EAAE,GAAC,KAAKnB,OAAjC;AACH;;AACD,UAAI,KAAKQ,UAAL,CAAgBI,KAAhB,IAAyB,KAAKf,WAAlC,EAA8C;AAC1C,aAAKc,aAAL,GAAqB,KAArB;;AACA,YAAK,KAAKS,cAAL,IAAuB,IAA5B,EAAiC;AAC7B,eAAKA,cAAL;AACH;AACJ;AACJ;AACJ;AArEI,CAAT","sourceRoot":"/","sourcesContent":["\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        m_ProMaxLen:{\r\n            default:690,\r\n            type:cc.Integer\r\n        },\r\n        m_Speed:{\r\n            default:690,\r\n            type:cc.Integer\r\n        },\r\n        m_Progress:{\r\n            type:cc.Integer,\r\n            default:0,\r\n            slide:true,\r\n            min:0,\r\n            max:690,\r\n            step:1,\r\n            notify(){\r\n                this._progressChange()\r\n            },\r\n        },\r\n        m_ProImage:cc.Node,\r\n\r\n    },\r\n    ctor:function(){\r\n        this.m_progressIng = false\r\n    },\r\n    _progressChange:function(){\r\n        this.m_ProImage.width =  this.m_Progress\r\n    },\r\n    //我们规定进度条整体长度百分比.0-1\r\n    setProgress:function(pro){\r\n        if ( pro > 1 || pro < 0 ){\r\n            return\r\n        }\r\n        var width = this.m_ProMaxLen * pro\r\n        if( width < this.m_SetWidth ){\r\n            return\r\n        }\r\n        this.m_SetWidth = this.m_ProMaxLen * pro\r\n\r\n        this.m_progressIng = true\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        this.m_ProImage.width = 0\r\n\r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    update (dt) {\r\n        if ( this.m_progressIng ){\r\n\r\n            if( this.m_ProImage.width < this.m_SetWidth){\r\n                this.m_ProImage.width += dt*this.m_Speed\r\n            }\r\n            if( this.m_ProImage.width >= this.m_ProMaxLen){\r\n                this.m_progressIng = false\r\n                if ( this.finishCallBack != null){\r\n                    this.finishCallBack()\r\n                }\r\n            }\r\n        }\r\n    },\r\n});\r\n"]}